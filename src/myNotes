Время маршрута отображается в формате «Начало» — «Окончание» (10:30—11:00). Формат продолжительности нахождения в точке маршрута зависит от длительности:
	Менее часа: минуты (например «23M»);
	Менее суток: часы минуты (например «02H 44M»);
	Более суток: дни часы минуты (например «01D 02H 30M»);

В колонке «Offers» отображаются не более 3-х дополнительных опций, применённых к точке маршрута. Остальные опции пользователь может посмотреть открыв карточку точки маршрута.

Для создания новой точки маршрута пользователь заполняет:
	Тип точки маршрута (один из: Taxi, Bus, Train, Ship, Transport, Drive, Flight, Check-in, Sightseeng, Restaurant.).
	Пункт назначения. Выбирается из списка предложенных значений, полученных с сервера. Пользователь не может ввести свой вариант для пункта назначения.
	Дата и время начала события. Выбор времени и даты осуществляется с помощью библиотеки flatpickr.js. Выбранная дата и время отображаются в поле в формате: день/месяц/год часы:минуты (например «25/12/2019 16:00»).
	Дата и время окончания события. Формат и требования аналогичны дате начала. Дата окончания не может быть меньше даты начала события.
	Стоимость. Целое число.
	Дополнительные опции. В зависимости от типа точки маршрута пользователь может выбрать дополнительные опции (offers).

При выборе типа точки маршрута должен обновляться вспомогательный текст (плейсхолдер). Текст плейсхолдера зависит от типа точки:
	Для точек регистрирующих перемещение пользователя на транспортном средстве (Flight, Taxi и т. д.): <action> to. Например: Flight to, Taxi to и т. д.
	Для точек регистрирующих прибытие в определённое место (Sightseeing, Restaurant, Check-in): <action> in. Например: Sightseeing in, Restaurant in и т. д.

const dateStart = new Date(`2019-03-18T10:30`);
const dateEnd = new Date(`2019-03-23T09:31`);

const duration = new Date(dateEnd - dateStart);

const castTimeFormat = (value) =>
  value < 10 ? `0${value}` : String(value);

const formatTime = (date) => {
  const hours = castTimeFormat(date.getUTCHours());
  const minutes = castTimeFormat(date.getUTCMinutes());

  return `${hours}H ${minutes}M`;
};


const formatDuration = (duration) => {
  let time;
  if (duration.getTime() >= 86400000) {
    time = `${castTimeFormat(Math.floor(duration.getTime() / 1000 / 60 / 60 / 24))}D ${formatTime(duration)}`;
  } else if (duration.getTime() >= 3600000) {
    time = `${formatTime(duration)}`;
    console.log(duration.getTime());
  } else {
    time = `${duration.getTime() / 1000 / 60}M`;
  }
  return time;
}

console.log(formatDuration(duration));

